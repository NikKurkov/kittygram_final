version: '3.8'

volumes:
  pg_data:
  static:
  media:

services:
  db:
    image: postgres:13
    container_name: kittygram_db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data

  backend:
    image: ${DOCKERHUB_USERNAME}/kittygram_backend:latest
    container_name: kittygram_backend
    restart: always
    env_file: .env
    depends_on:
      - db
    volumes:
      - static:/app/collected_static
      - media:/app/media
    expose:
      - "8000"

  frontend:
    image: ${DOCKERHUB_USERNAME}/kittygram_frontend:latest
    container_name: kittygram_frontend
    restart: always
    # Кладём build фронта в общий том static
    command: >
      sh -c "
        mkdir -p /static &&
        # кладём index.html и манифесты в корень
        cp -f /app/build/index.html /app/build/manifest.json /app/build/favicon.ico /static/ 2>/dev/null || true &&
        # переносим содержимое build/static/* прямо в /static/
        [ -d /app/build/static ] && cp -r /app/build/static/* /static/ || true
      "
    volumes:
      - static:/static

  gateway:
    image: ${DOCKERHUB_USERNAME}/kittygram_gateway:latest
    container_name: kittygram_gateway
    restart: always
    ports:
      - "9000:80"
    environment:
      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx/conf.d
      - BACKEND_HOST=backend
      - BACKEND_PORT=8000
    volumes:
      - static:/static
      - media:/media
    depends_on:
      - backend
      - frontend
